import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Marianne
 */
public class FoodDashBoard extends javax.swing.JFrame {

    /**
     * Creates new form FoodDashBoard
     */
    public FoodDashBoard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        AlfredoFettuccine = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        CoffeeName14 = new javax.swing.JLabel();
        CoffeePrice14 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        Fname14 = new javax.swing.JLabel();
        P14 = new javax.swing.JLabel();
        Q14 = new javax.swing.JComboBox<>();
        Add14 = new javax.swing.JButton();
        Bolognese = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        CoffeeName15 = new javax.swing.JLabel();
        CoffeePrice15 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        Fname13 = new javax.swing.JLabel();
        P13 = new javax.swing.JLabel();
        Q13 = new javax.swing.JComboBox<>();
        Add13 = new javax.swing.JButton();
        Carbonara = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        CoffeeName16 = new javax.swing.JLabel();
        CoffeePrice16 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        Fname15 = new javax.swing.JLabel();
        P15 = new javax.swing.JLabel();
        Q15 = new javax.swing.JComboBox<>();
        Add15 = new javax.swing.JButton();
        GarlicButterShrimpPasta = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        CoffeeName17 = new javax.swing.JLabel();
        CoffeePrice17 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        Fname16 = new javax.swing.JLabel();
        P16 = new javax.swing.JLabel();
        Q16 = new javax.swing.JComboBox<>();
        Add16 = new javax.swing.JButton();
        GnocchiWithPesto = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        CoffeeName18 = new javax.swing.JLabel();
        CoffeePrice18 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        Fname12 = new javax.swing.JLabel();
        P12 = new javax.swing.JLabel();
        Q12 = new javax.swing.JComboBox<>();
        Add12 = new javax.swing.JButton();
        MacAndCheese = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        CoffeeName19 = new javax.swing.JLabel();
        CoffeePrice19 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        Fname11 = new javax.swing.JLabel();
        P11 = new javax.swing.JLabel();
        Q11 = new javax.swing.JComboBox<>();
        Add11 = new javax.swing.JButton();
        PastaPrimavera = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        CoffeeName20 = new javax.swing.JLabel();
        CoffeePrice20 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        Fname10 = new javax.swing.JLabel();
        P10 = new javax.swing.JLabel();
        Q10 = new javax.swing.JComboBox<>();
        Add10 = new javax.swing.JButton();
        PenneArrabbiata = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        CoffeeName21 = new javax.swing.JLabel();
        CoffeePrice21 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        Fname9 = new javax.swing.JLabel();
        P9 = new javax.swing.JLabel();
        Q9 = new javax.swing.JComboBox<>();
        Add9 = new javax.swing.JButton();
        Spagheti = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        CoffeeName22 = new javax.swing.JLabel();
        CoffeePrice22 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        Fname8 = new javax.swing.JLabel();
        P8 = new javax.swing.JLabel();
        Q8 = new javax.swing.JComboBox<>();
        Add8 = new javax.swing.JButton();
        TunaPesto = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        CoffeeName23 = new javax.swing.JLabel();
        CoffeePrice23 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        Fname7 = new javax.swing.JLabel();
        P7 = new javax.swing.JLabel();
        Q7 = new javax.swing.JComboBox<>();
        Add7 = new javax.swing.JButton();
        RissottoAllaMilanese = new javax.swing.JPanel();
        CoffeeName24 = new javax.swing.JLabel();
        CoffeePrice24 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        Fname6 = new javax.swing.JLabel();
        P6 = new javax.swing.JLabel();
        Q6 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        Add6 = new javax.swing.JButton();
        OssoBuco = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        CoffeeName25 = new javax.swing.JLabel();
        CoffeePrice25 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        Fname5 = new javax.swing.JLabel();
        P5 = new javax.swing.JLabel();
        Q5 = new javax.swing.JComboBox<>();
        Add5 = new javax.swing.JButton();
        Cannoli = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        CoffeeName26 = new javax.swing.JLabel();
        CoffeePrice26 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        Fname4 = new javax.swing.JLabel();
        P4 = new javax.swing.JLabel();
        Q4 = new javax.swing.JComboBox<>();
        Add4 = new javax.swing.JButton();
        Lasagna = new javax.swing.JPanel();
        CoffeeName27 = new javax.swing.JLabel();
        CoffeePrice27 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        Fname3 = new javax.swing.JLabel();
        P3 = new javax.swing.JLabel();
        Q3 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        Add3 = new javax.swing.JButton();
        MagheritaPizza = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        CoffeeName28 = new javax.swing.JLabel();
        CoffeePrice28 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        Fname2 = new javax.swing.JLabel();
        P2 = new javax.swing.JLabel();
        Q2 = new javax.swing.JComboBox<>();
        Add2 = new javax.swing.JButton();
        Minestrone = new javax.swing.JPanel();
        CoffeeName29 = new javax.swing.JLabel();
        CoffeePrice29 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        Fname = new javax.swing.JLabel();
        P1 = new javax.swing.JLabel();
        Q1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        Add1 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AlfredoFettuccine.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AlfredoFettuccine.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/alfredo fettuccine.jpg"))); // NOI18N
        AlfredoFettuccine.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName14.setText("Name:");
        AlfredoFettuccine.add(CoffeeName14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice14.setText("Price");
        AlfredoFettuccine.add(CoffeePrice14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel71.setText("Quantity");
        AlfredoFettuccine.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname14.setText("Alfredo Fettuccine");
        AlfredoFettuccine.add(Fname14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P14.setText("150");
        AlfredoFettuccine.add(P14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q14.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q14ActionPerformed(evt);
            }
        });
        AlfredoFettuccine.add(Q14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add14.setText("Add");
        Add14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add14ActionPerformed(evt);
            }
        });
        AlfredoFettuccine.add(Add14, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(AlfredoFettuccine, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 1060, 211, 320));

        Bolognese.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Bolognese.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bolognese.jpg"))); // NOI18N
        Bolognese.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName15.setText("Name:");
        Bolognese.add(CoffeeName15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice15.setText("Price");
        Bolognese.add(CoffeePrice15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel72.setText("Quantity");
        Bolognese.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname13.setText("Bolognese");
        Bolognese.add(Fname13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P13.setText("150");
        Bolognese.add(P13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q13.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q13ActionPerformed(evt);
            }
        });
        Bolognese.add(Q13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add13.setText("Add");
        Add13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add13ActionPerformed(evt);
            }
        });
        Bolognese.add(Add13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(Bolognese, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 1060, 211, 320));

        Carbonara.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Carbonara.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/carbonara.jpg"))); // NOI18N
        Carbonara.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName16.setText("Name:");
        Carbonara.add(CoffeeName16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice16.setText("Price");
        Carbonara.add(CoffeePrice16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel73.setText("Quantity");
        Carbonara.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname15.setText("Carbonara");
        Carbonara.add(Fname15, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P15.setText("150");
        Carbonara.add(P15, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q15.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q15ActionPerformed(evt);
            }
        });
        Carbonara.add(Q15, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add15.setText("Add");
        Add15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add15ActionPerformed(evt);
            }
        });
        Carbonara.add(Add15, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(Carbonara, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 1060, 211, 320));

        GarlicButterShrimpPasta.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        GarlicButterShrimpPasta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/garlic butter shrimp pasta.jpg"))); // NOI18N
        GarlicButterShrimpPasta.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName17.setText("Name:");
        GarlicButterShrimpPasta.add(CoffeeName17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice17.setText("Price");
        GarlicButterShrimpPasta.add(CoffeePrice17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel74.setText("Quantity");
        GarlicButterShrimpPasta.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname16.setText("Garlic Butter Shrimp Pasta");
        GarlicButterShrimpPasta.add(Fname16, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        P16.setText("150");
        GarlicButterShrimpPasta.add(P16, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q16.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q16ActionPerformed(evt);
            }
        });
        GarlicButterShrimpPasta.add(Q16, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add16.setText("Add");
        Add16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add16ActionPerformed(evt);
            }
        });
        GarlicButterShrimpPasta.add(Add16, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(GarlicButterShrimpPasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 1060, 211, 320));

        GnocchiWithPesto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        GnocchiWithPesto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/gnocchi with pesto.jpg"))); // NOI18N
        GnocchiWithPesto.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName18.setText("Name:");
        GnocchiWithPesto.add(CoffeeName18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice18.setText("Price");
        GnocchiWithPesto.add(CoffeePrice18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel75.setText("Quantity");
        GnocchiWithPesto.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname12.setText("Gnocchi with Pesto");
        GnocchiWithPesto.add(Fname12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P12.setText("150");
        GnocchiWithPesto.add(P12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q12.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q12ActionPerformed(evt);
            }
        });
        GnocchiWithPesto.add(Q12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add12.setText("Add");
        Add12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add12ActionPerformed(evt);
            }
        });
        GnocchiWithPesto.add(Add12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(GnocchiWithPesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 710, 211, 320));

        MacAndCheese.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        MacAndCheese.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mac and cheese.jpg"))); // NOI18N
        MacAndCheese.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName19.setText("Name:");
        MacAndCheese.add(CoffeeName19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice19.setText("Price");
        MacAndCheese.add(CoffeePrice19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel76.setText("Quantity");
        MacAndCheese.add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname11.setText("Mac and Cheese");
        MacAndCheese.add(Fname11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P11.setText("150");
        MacAndCheese.add(P11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q11ActionPerformed(evt);
            }
        });
        MacAndCheese.add(Q11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add11.setText("Add");
        Add11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add11ActionPerformed(evt);
            }
        });
        MacAndCheese.add(Add11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(MacAndCheese, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 710, 211, 320));

        PastaPrimavera.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        PastaPrimavera.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pasta primavera.jpg"))); // NOI18N
        PastaPrimavera.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName20.setText("Name:");
        PastaPrimavera.add(CoffeeName20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice20.setText("Price");
        PastaPrimavera.add(CoffeePrice20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel77.setText("Quantity");
        PastaPrimavera.add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname10.setText("Pasta Primavera");
        PastaPrimavera.add(Fname10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P10.setText("150");
        PastaPrimavera.add(P10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q10ActionPerformed(evt);
            }
        });
        PastaPrimavera.add(Q10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add10.setText("Add");
        Add10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add10ActionPerformed(evt);
            }
        });
        PastaPrimavera.add(Add10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(PastaPrimavera, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 710, 211, 320));

        PenneArrabbiata.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        PenneArrabbiata.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/penne arrabbiata.jpg"))); // NOI18N
        PenneArrabbiata.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName21.setText("Name:");
        PenneArrabbiata.add(CoffeeName21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice21.setText("Price");
        PenneArrabbiata.add(CoffeePrice21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel78.setText("Quantity");
        PenneArrabbiata.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname9.setText("Penne Arrabbiata");
        PenneArrabbiata.add(Fname9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P9.setText("150");
        PenneArrabbiata.add(P9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q9ActionPerformed(evt);
            }
        });
        PenneArrabbiata.add(Q9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add9.setText("Add");
        Add9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add9ActionPerformed(evt);
            }
        });
        PenneArrabbiata.add(Add9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(PenneArrabbiata, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 710, 211, 320));

        Spagheti.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Spagheti.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/spaghetti.jpg"))); // NOI18N
        Spagheti.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName22.setText("Name:");
        Spagheti.add(CoffeeName22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice22.setText("Price");
        Spagheti.add(CoffeePrice22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel79.setText("Quantity");
        Spagheti.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname8.setText("Spaghetti");
        Spagheti.add(Fname8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P8.setText("150");
        Spagheti.add(P8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q8ActionPerformed(evt);
            }
        });
        Spagheti.add(Q8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add8.setText("Add");
        Add8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add8ActionPerformed(evt);
            }
        });
        Spagheti.add(Add8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(Spagheti, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 350, 211, 320));

        TunaPesto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TunaPesto.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tuna pesto.jpg"))); // NOI18N
        TunaPesto.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 160));

        CoffeeName23.setText("Name:");
        TunaPesto.add(CoffeeName23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice23.setText("Price");
        TunaPesto.add(CoffeePrice23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel80.setText("Quantity");
        TunaPesto.add(jLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname7.setText("Tuna Pesto ");
        TunaPesto.add(Fname7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P7.setText("150");
        TunaPesto.add(P7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q7ActionPerformed(evt);
            }
        });
        TunaPesto.add(Q7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add7.setText("Add");
        Add7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add7ActionPerformed(evt);
            }
        });
        TunaPesto.add(Add7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(TunaPesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 350, 211, 320));

        RissottoAllaMilanese.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        RissottoAllaMilanese.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CoffeeName24.setText("Name:");
        RissottoAllaMilanese.add(CoffeeName24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice24.setText("Price");
        RissottoAllaMilanese.add(CoffeePrice24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel81.setText("Quantity");
        RissottoAllaMilanese.add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname6.setText("Rissotto alla Milanese");
        RissottoAllaMilanese.add(Fname6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P6.setText("150");
        RissottoAllaMilanese.add(P6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q6ActionPerformed(evt);
            }
        });
        RissottoAllaMilanese.add(Q6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Risotto alla Milanese.jpg"))); // NOI18N
        RissottoAllaMilanese.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        Add6.setText("Add");
        Add6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add6ActionPerformed(evt);
            }
        });
        RissottoAllaMilanese.add(Add6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(RissottoAllaMilanese, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 350, 211, 320));

        OssoBuco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        OssoBuco.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Osso Buco.jpg"))); // NOI18N
        OssoBuco.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName25.setText("Name:");
        OssoBuco.add(CoffeeName25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice25.setText("Price");
        OssoBuco.add(CoffeePrice25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel82.setText("Quantity");
        OssoBuco.add(jLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname5.setText("Osso Buco");
        OssoBuco.add(Fname5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P5.setText("150");
        OssoBuco.add(P5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q5ActionPerformed(evt);
            }
        });
        OssoBuco.add(Q5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add5.setText("Add");
        Add5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add5ActionPerformed(evt);
            }
        });
        OssoBuco.add(Add5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(OssoBuco, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 211, 320));

        Cannoli.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Cannoli.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Cannoli.jpg"))); // NOI18N
        Cannoli.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName26.setText("Name:");
        Cannoli.add(CoffeeName26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice26.setText("Price");
        Cannoli.add(CoffeePrice26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel83.setText("Quantity");
        Cannoli.add(jLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname4.setText("Cannoli");
        Cannoli.add(Fname4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P4.setText("150");
        Cannoli.add(P4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q4ActionPerformed(evt);
            }
        });
        Cannoli.add(Q4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add4.setText("Add");
        Add4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add4ActionPerformed(evt);
            }
        });
        Cannoli.add(Add4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(Cannoli, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 0, 211, 320));

        Lasagna.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Lasagna.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CoffeeName27.setText("Name:");
        Lasagna.add(CoffeeName27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice27.setText("Price");
        Lasagna.add(CoffeePrice27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel84.setText("Quantity");
        Lasagna.add(jLabel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname3.setText("Lasagna");
        Lasagna.add(Fname3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P3.setText("150");
        Lasagna.add(P3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q3ActionPerformed(evt);
            }
        });
        Lasagna.add(Q3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Lasagna.jpg"))); // NOI18N
        Lasagna.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 160));

        Add3.setText("Add");
        Add3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add3ActionPerformed(evt);
            }
        });
        Lasagna.add(Add3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(Lasagna, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 211, 310));

        MagheritaPizza.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        MagheritaPizza.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Margherita Pizza.jpg"))); // NOI18N
        MagheritaPizza.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 150));

        CoffeeName28.setText("Name:");
        MagheritaPizza.add(CoffeeName28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice28.setText("Price");
        MagheritaPizza.add(CoffeePrice28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel85.setText("Quantity");
        MagheritaPizza.add(jLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname2.setText("Magherita Pizza");
        MagheritaPizza.add(Fname2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P2.setText("150");
        MagheritaPizza.add(P2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q2ActionPerformed(evt);
            }
        });
        MagheritaPizza.add(Q2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        Add2.setText("Add");
        Add2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add2ActionPerformed(evt);
            }
        });
        MagheritaPizza.add(Add2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(MagheritaPizza, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 211, 310));

        Minestrone.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Minestrone.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CoffeeName29.setText("Name:");
        Minestrone.add(CoffeeName29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        CoffeePrice29.setText("Price");
        Minestrone.add(CoffeePrice29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel86.setText("Quantity");
        Minestrone.add(jLabel86, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        Fname.setText("Minestrone");
        Minestrone.add(Fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        P1.setText("150");
        Minestrone.add(P1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        Q1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", " " }));
        Q1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q1ActionPerformed(evt);
            }
        });
        Minestrone.add(Q1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Minestrone.jpg"))); // NOI18N
        Minestrone.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 160));

        Add1.setText("Add");
        Add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add1ActionPerformed(evt);
            }
        });
        Minestrone.add(Add1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, -1, -1));

        jPanel1.add(Minestrone, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 211, 310));

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/brgcoffee.jpg"))); // NOI18N
        jPanel1.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 1090, 1410));

        jScrollPane2.setViewportView(jPanel1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 1080, 590));

        jLabel43.setFont(new java.awt.Font("Segoe UI Historic", 3, 24)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("Food Menu ");
        getContentPane().add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 160, 40));

        jButton6.setText("Coffee");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 630, -1, -1));

        jButton7.setText("Tea");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 70, -1));

        jButton8.setText("Drinks");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 630, -1, -1));

        jButton9.setText("Pastry");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 660, -1, -1));

        jButton10.setText("Dishes");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 630, -1, -1));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton1.setText("Total");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 640, 120, 40));

        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/brgcoffee.jpg"))); // NOI18N
        getContentPane().add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.dispose();
        CoffeeDashboard cdb = new CoffeeDashboard();
        cdb.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        this.dispose();
        TeaDashBoard tdb = new TeaDashBoard();
        tdb.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        this.dispose();
        DrinksDashBoard ddb = new DrinksDashBoard();
        ddb.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        this.dispose();
        PastryDashBoard2 pdb = new PastryDashBoard2();
        pdb.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        this.dispose();
        FoodDashBoard fdb = new FoodDashBoard();
        fdb.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        OrderList2 OL = new OrderList2();
        OL.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add1ActionPerformed
        // TODO add your handling code here: 
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Fname.setText("Minestrone");

        String FoodName = Fname.getText();
        String price = P1.getText();
        String quantity = (String) Q1.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add1ActionPerformed

    private void Q1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q1ActionPerformed
        // TODO add your handling code here:
        
        int p = Integer.parseInt(P1.getText());
        int q = Integer.parseInt((String) Q1.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P1.setText(t);
    }//GEN-LAST:event_Q1ActionPerformed

    private void Q2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q2ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P2.getText());
        int q = Integer.parseInt((String) Q2.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P2.setText(t);
    }//GEN-LAST:event_Q2ActionPerformed

    private void Q6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q6ActionPerformed
        // TODO add your handling code here:
        
                int p = Integer.parseInt(P6.getText());
        int q = Integer.parseInt((String) Q6.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P6.setText(t);
    }//GEN-LAST:event_Q6ActionPerformed

    private void Add2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add2ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        Fname2.setText("Magherita Pizza");

        String FoodName = Fname2.getText();
        String price = P2.getText();
        String quantity = (String) Q2.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
        
    }//GEN-LAST:event_Add2ActionPerformed

    private void Q3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q3ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P3.getText());
        int q = Integer.parseInt((String) Q3.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P3.setText(t);
    }//GEN-LAST:event_Q3ActionPerformed

    private void Q4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q4ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P4.getText());
        int q = Integer.parseInt((String) Q4.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P4.setText(t);
    }//GEN-LAST:event_Q4ActionPerformed

    private void Q7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q7ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P7.getText());
        int q = Integer.parseInt((String) Q7.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P7.setText(t);
    }//GEN-LAST:event_Q7ActionPerformed

    private void Q5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q5ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P5.getText());
        int q = Integer.parseInt((String) Q5.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P5.setText(t);
    }//GEN-LAST:event_Q5ActionPerformed

    private void Q8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q8ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P8.getText());
        int q = Integer.parseInt((String) Q8.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P8.setText(t);
    }//GEN-LAST:event_Q8ActionPerformed

    private void Q15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q15ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P15.getText());
        int q = Integer.parseInt((String) Q15.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P15.setText(t);
    }//GEN-LAST:event_Q15ActionPerformed

    private void Q11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q11ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P11.getText());
        int q = Integer.parseInt((String) Q11.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P11.setText(t);
    }//GEN-LAST:event_Q11ActionPerformed

    private void Q10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q10ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P10.getText());
        int q = Integer.parseInt((String) Q10.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P10.setText(t);
    }//GEN-LAST:event_Q10ActionPerformed

    private void Q14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q14ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P14.getText());
        int q = Integer.parseInt((String) Q14.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P14.setText(t);
    }//GEN-LAST:event_Q14ActionPerformed

    private void Q9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q9ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P9.getText());
        int q = Integer.parseInt((String) Q9.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P9.setText(t);
    }//GEN-LAST:event_Q9ActionPerformed

    private void Q13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q13ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P13.getText());
        int q = Integer.parseInt((String) Q13.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P13.setText(t);
    }//GEN-LAST:event_Q13ActionPerformed

    private void Q12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q12ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P12.getText());
        int q = Integer.parseInt((String) Q12.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P12.setText(t);
    }//GEN-LAST:event_Q12ActionPerformed

    private void Q16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q16ActionPerformed
        // TODO add your handling code here:
                int p = Integer.parseInt(P16.getText());
        int q = Integer.parseInt((String) Q16.getSelectedItem());
        int total = p * q;
        String t = String.valueOf(total);
        P16.setText(t);
    }//GEN-LAST:event_Q16ActionPerformed

    private void Add3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add3ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
        //Fname2.setText("Magherita Pizza");

        String FoodName = Fname3.getText();
        String price = P3.getText();
        String quantity = (String) Q3.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
        
    }//GEN-LAST:event_Add3ActionPerformed

    private void Add4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add4ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname4.getText();
        String price = P4.getText();
        String quantity = (String) Q4.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add4ActionPerformed

    private void Add5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add5ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname5.getText();
        String price = P5.getText();
        String quantity = (String) Q5.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add5ActionPerformed

    private void Add6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add6ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname6.getText();
        String price = P6.getText();
        String quantity = (String) Q6.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add6ActionPerformed

    private void Add7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add7ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname7.getText();
        String price = P7.getText();
        String quantity = (String) Q7.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add7ActionPerformed

    private void Add8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add8ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname8.getText();
        String price = P8.getText();
        String quantity = (String) Q8.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add8ActionPerformed

    private void Add9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add9ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname9.getText();
        String price = P9.getText();
        String quantity = (String) Q9.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add9ActionPerformed

    private void Add10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add10ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname10.getText();
        String price = P10.getText();
        String quantity = (String) Q10.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add10ActionPerformed

    private void Add11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add11ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname11.getText();
        String price = P11.getText();
        String quantity = (String) Q11.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add11ActionPerformed

    private void Add12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add12ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname12.getText();
        String price = P12.getText();
        String quantity = (String) Q12.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add12ActionPerformed

    private void Add13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add13ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname13.getText();
        String price = P13.getText();
        String quantity = (String) Q13.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add13ActionPerformed

    private void Add14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add14ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname14.getText();
        String price = P14.getText();
        String quantity = (String) Q14.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add14ActionPerformed

    private void Add15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add15ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname15.getText();
        String price = P15.getText();
        String quantity = (String) Q15.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add15ActionPerformed

    private void Add16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add16ActionPerformed
        // TODO add your handling code here:
         String url = "jdbc:mysql://localhost:3306/oop";   
        String user = "root";  
        String password = ""; 
       // Fname4.setText("Magherita Pizza");

        String FoodName = Fname16.getText();
        String price = P16.getText();
        String quantity = (String) Q16.getSelectedItem();

        String size = null;

        // Validate user input
        if (FoodName.isEmpty() || price.isEmpty() || quantity == null) {
            JOptionPane.showMessageDialog(null, "Please fill out all the required information.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        // Validate price is numeric
        try {
            Double.parseDouble(price);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Price must be a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop execution if validation fails
        }

        String query = "INSERT INTO `foods` (`FoodName`, `price`, `quantity`) VALUES (?, ?, ?)";
        Connection connection = null;
        PreparedStatement stmt = null;

        try {
            connection = (Connection) DriverManager.getConnection(url, user, password);
            stmt = connection.prepareStatement(query);

            // Set parameter values
            stmt.setString(1, FoodName);             
            stmt.setString(2, price);  
            stmt.setString(3, quantity);

    
            // Execute query
            int rowsInserted = stmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(null, "Food  added successfully!");
            }

        }catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
                  finally {
            // Proper resource cleanup
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } 
            if (connection != null) {
                try {
                    connection.close();
                } catch (Exception e){
                    System.out.println("walang koneksyon");;
                }
            } // Log closing error
        }
    }//GEN-LAST:event_Add16ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FoodDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FoodDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FoodDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FoodDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FoodDashBoard().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add1;
    private javax.swing.JButton Add10;
    private javax.swing.JButton Add11;
    private javax.swing.JButton Add12;
    private javax.swing.JButton Add13;
    private javax.swing.JButton Add14;
    private javax.swing.JButton Add15;
    private javax.swing.JButton Add16;
    private javax.swing.JButton Add2;
    private javax.swing.JButton Add3;
    private javax.swing.JButton Add4;
    private javax.swing.JButton Add5;
    private javax.swing.JButton Add6;
    private javax.swing.JButton Add7;
    private javax.swing.JButton Add8;
    private javax.swing.JButton Add9;
    private javax.swing.JPanel AlfredoFettuccine;
    private javax.swing.JPanel Bolognese;
    private javax.swing.JPanel Cannoli;
    private javax.swing.JPanel Carbonara;
    private javax.swing.JLabel CoffeeName14;
    private javax.swing.JLabel CoffeeName15;
    private javax.swing.JLabel CoffeeName16;
    private javax.swing.JLabel CoffeeName17;
    private javax.swing.JLabel CoffeeName18;
    private javax.swing.JLabel CoffeeName19;
    private javax.swing.JLabel CoffeeName20;
    private javax.swing.JLabel CoffeeName21;
    private javax.swing.JLabel CoffeeName22;
    private javax.swing.JLabel CoffeeName23;
    private javax.swing.JLabel CoffeeName24;
    private javax.swing.JLabel CoffeeName25;
    private javax.swing.JLabel CoffeeName26;
    private javax.swing.JLabel CoffeeName27;
    private javax.swing.JLabel CoffeeName28;
    private javax.swing.JLabel CoffeeName29;
    private javax.swing.JLabel CoffeePrice14;
    private javax.swing.JLabel CoffeePrice15;
    private javax.swing.JLabel CoffeePrice16;
    private javax.swing.JLabel CoffeePrice17;
    private javax.swing.JLabel CoffeePrice18;
    private javax.swing.JLabel CoffeePrice19;
    private javax.swing.JLabel CoffeePrice20;
    private javax.swing.JLabel CoffeePrice21;
    private javax.swing.JLabel CoffeePrice22;
    private javax.swing.JLabel CoffeePrice23;
    private javax.swing.JLabel CoffeePrice24;
    private javax.swing.JLabel CoffeePrice25;
    private javax.swing.JLabel CoffeePrice26;
    private javax.swing.JLabel CoffeePrice27;
    private javax.swing.JLabel CoffeePrice28;
    private javax.swing.JLabel CoffeePrice29;
    private javax.swing.JLabel Fname;
    private javax.swing.JLabel Fname10;
    private javax.swing.JLabel Fname11;
    private javax.swing.JLabel Fname12;
    private javax.swing.JLabel Fname13;
    private javax.swing.JLabel Fname14;
    private javax.swing.JLabel Fname15;
    private javax.swing.JLabel Fname16;
    private javax.swing.JLabel Fname2;
    private javax.swing.JLabel Fname3;
    private javax.swing.JLabel Fname4;
    private javax.swing.JLabel Fname5;
    private javax.swing.JLabel Fname6;
    private javax.swing.JLabel Fname7;
    private javax.swing.JLabel Fname8;
    private javax.swing.JLabel Fname9;
    private javax.swing.JPanel GarlicButterShrimpPasta;
    private javax.swing.JPanel GnocchiWithPesto;
    private javax.swing.JPanel Lasagna;
    private javax.swing.JPanel MacAndCheese;
    private javax.swing.JPanel MagheritaPizza;
    private javax.swing.JPanel Minestrone;
    private javax.swing.JPanel OssoBuco;
    private javax.swing.JLabel P1;
    private javax.swing.JLabel P10;
    private javax.swing.JLabel P11;
    private javax.swing.JLabel P12;
    private javax.swing.JLabel P13;
    private javax.swing.JLabel P14;
    private javax.swing.JLabel P15;
    private javax.swing.JLabel P16;
    private javax.swing.JLabel P2;
    private javax.swing.JLabel P3;
    private javax.swing.JLabel P4;
    private javax.swing.JLabel P5;
    private javax.swing.JLabel P6;
    private javax.swing.JLabel P7;
    private javax.swing.JLabel P8;
    private javax.swing.JLabel P9;
    private javax.swing.JPanel PastaPrimavera;
    private javax.swing.JPanel PenneArrabbiata;
    private javax.swing.JComboBox<String> Q1;
    private javax.swing.JComboBox<String> Q10;
    private javax.swing.JComboBox<String> Q11;
    private javax.swing.JComboBox<String> Q12;
    private javax.swing.JComboBox<String> Q13;
    private javax.swing.JComboBox<String> Q14;
    private javax.swing.JComboBox<String> Q15;
    private javax.swing.JComboBox<String> Q16;
    private javax.swing.JComboBox<String> Q2;
    private javax.swing.JComboBox<String> Q3;
    private javax.swing.JComboBox<String> Q4;
    private javax.swing.JComboBox<String> Q5;
    private javax.swing.JComboBox<String> Q6;
    private javax.swing.JComboBox<String> Q7;
    private javax.swing.JComboBox<String> Q8;
    private javax.swing.JComboBox<String> Q9;
    private javax.swing.JPanel RissottoAllaMilanese;
    private javax.swing.JPanel Spagheti;
    private javax.swing.JPanel TunaPesto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
